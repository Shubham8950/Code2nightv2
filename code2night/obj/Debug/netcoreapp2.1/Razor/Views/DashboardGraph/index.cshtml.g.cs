#pragma checksum "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ac919612fe943219fb0a20175bbfa789680d0396"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_DashboardGraph_index), @"mvc.1.0.view", @"/Views/DashboardGraph/index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/DashboardGraph/index.cshtml", typeof(AspNetCore.Views_DashboardGraph_index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "E:\Code2night v2\code2night\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#line 5 "E:\Code2night v2\code2night\Views\_ViewImports.cshtml"
using Code2Night;

#line default
#line hidden
#line 6 "E:\Code2night v2\code2night\Views\_ViewImports.cshtml"
using Code2Night.Models;

#line default
#line hidden
#line 7 "E:\Code2night v2\code2night\Views\_ViewImports.cshtml"
using Code2Night.DAL.Common;

#line default
#line hidden
#line 2 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ac919612fe943219fb0a20175bbfa789680d0396", @"/Views/DashboardGraph/index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"85d4a46e63756f73e413e4d4164f7aecef7ed145", @"/Views/_ViewImports.cshtml")]
    public class Views_DashboardGraph_index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Code2Night.DAL.Common.HomeViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_ToDo", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
  
    ViewBag.Title = "Dashboard";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

#line default
#line hidden
            BeginContext(161, 883, true);
            WriteLiteral(@"<style>
    div#textboxbutton #Additemtextbox {
        height: 38px;
        padding: 5px 10px;
        border-radius: 6px;
        border: 1px solid #f4f6f9;
    }
</style>
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
        max-width: 100%;
    }
</style>

<!-- Resources -->
<script src=""https://cdn.amcharts.com/lib/4/core.js""></script>
<script src=""https://cdn.amcharts.com/lib/4/charts.js""></script>
<script src=""https://cdn.amcharts.com/lib/4/themes/animated.js""></script>
<section class=""content"">
    <div class=""container-fluid"" style=""width:1060px"">
        <!-- Small boxes (Stat box) -->
        <div class=""row"">
            <div class=""col-lg-3 col-12 col-sm-12"">
                <!-- small box -->
                <div class=""small-box bg-info"">
                    <div class=""inner"">
                        <h3>");
            EndContext();
            BeginContext(1045, 30, false);
#line 35 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                       Write(Model.DashBoardItem.TotalUsers);

#line default
#line hidden
            EndContext();
            BeginContext(1075, 233, true);
            WriteLiteral("</h3>\r\n\r\n                        <p>Total Users</p>\r\n                    </div>\r\n                    <div class=\"icon\">\r\n                        <i class=\"ion ion-person-add\"></i>\r\n\r\n                    </div>\r\n                    <a");
            EndContext();
            BeginWriteAttribute("href", " href=\'", 1308, "\'", 1344, 1);
#line 43 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
WriteAttributeValue("", 1315, Url.Action("Listing","Blog"), 1315, 29, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(1345, 365, true);
            WriteLiteral(@" class=""small-box-footer"">More info <i class=""fas fa-arrow-circle-right""></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class=""col-lg-3 col-12 col-sm-12"">
                <!-- small box -->
                <div class=""small-box bg-success"">
                    <div class=""inner"">
                        <h3>");
            EndContext();
            BeginContext(1711, 30, false);
#line 51 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                       Write(Model.DashBoardItem.TotalBlogs);

#line default
#line hidden
            EndContext();
            BeginContext(1741, 230, true);
            WriteLiteral("</h3>\r\n                        <p>Total Blogs</p>\r\n                    </div>\r\n                    <div class=\"icon\">\r\n                        <i class=\"ion ion-clipboard\"></i>\r\n\r\n                    </div>\r\n                    <a");
            EndContext();
            BeginWriteAttribute("href", " href=\'", 1971, "\'", 2007, 1);
#line 58 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
WriteAttributeValue("", 1978, Url.Action("Listing","Blog"), 1978, 29, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(2008, 365, true);
            WriteLiteral(@" class=""small-box-footer"">More info <i class=""fas fa-arrow-circle-right""></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class=""col-lg-3 col-12 col-sm-12"">
                <!-- small box -->
                <div class=""small-box bg-warning"">
                    <div class=""inner"">
                        <h3>");
            EndContext();
            BeginContext(2375, 155, false);
#line 66 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                        Write(Model.DashBoardItem.LifeTimeViews>1000? ((decimal)Model.DashBoardItem.LifeTimeViews/1000).ToString("0.0")+"k": Model.DashBoardItem.LifeTimeViews.ToString());

#line default
#line hidden
            EndContext();
            BeginContext(2531, 606, true);
            WriteLiteral(@"</h3>
                        <p>Life Time Views</p>
                    </div>
                    <div class=""icon"">
                        <i class=""ion ion-stats-bars""></i>
                    </div>
                    <a href=""#"" class=""small-box-footer"">More info <i class=""fas fa-arrow-circle-right""></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class=""col-lg-3 col-12 col-sm-12"">
                <!-- small box -->
                <div class=""small-box bg-danger"">
                    <div class=""inner"">
                        <h3>");
            EndContext();
            BeginContext(3139, 152, false);
#line 80 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                        Write(Model.DashBoardItem.MonthlyViews>1000? ((decimal)Model.DashBoardItem.MonthlyViews/1000).ToString("0.0")+"k": Model.DashBoardItem.MonthlyViews.ToString());

#line default
#line hidden
            EndContext();
            BeginContext(3292, 1116, true);
            WriteLiteral(@"</h3>
                        <p>This Month</p>
                    </div>
                    <div class=""icon"">
                        <i class=""ion ion-pie-graph""></i>
                    </div>
                    <a href=""#"" class=""small-box-footer"">More info <i class=""fas fa-arrow-circle-right""></i></a>
                </div>
            </div>
            <!-- ./col -->
        </div>
        <!-- /.row -->
        <!-- Main row -->
        <div class=""row"">
            <!-- Left col -->
            <section class=""col-lg-7 col-12 col-sm-12 connectedSortable"">
                <div class=""card"">
                    <div class=""card-header"">
                        <h3 class=""card-title"">
                            <i class=""ion ion-clipboard mr-1""></i>
                            To Do List
                        </h3>
                    </div>
                    <!-- /.card-header -->
                    <div class=""card-body"">
                        <ul class=""todo-list""");
            WriteLiteral(" data-widget=\"todo-list\" id=\"Todolist\" style=\"height: 284px;\">\r\n                            ");
            EndContext();
            BeginContext(4408, 38, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "ac919612fe943219fb0a20175bbfa789680d039610429", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
#line 106 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Model = Model;

#line default
#line hidden
            __tagHelperExecutionContext.AddTagHelperAttribute("model", __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Model, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4446, 209, true);
            WriteLiteral("\r\n                        </ul>\r\n                    </div>\r\n                    <!-- /.card-body -->\r\n                    <div class=\"card-footer clearfix\">\r\n                        <div id=\"textboxbutton\">\r\n");
            EndContext();
            BeginContext(4864, 4237, true);
            WriteLiteral(@"                            <button type=""button"" class=""btn btn-info float-right"" onclick=""Additembutton()""><i class=""fas fa-plus""></i>  Add item</button>
                            <input type=""text"" placeholder=""Enter Item"" id=""Additemtextbox"" />
                        </div>
                    </div>
                </div>
                <!-- /.card -->
            </section>
            <!-- /.Left col -->
            <!-- right col (We are only adding the ID to make the widgets sortable)-->
            <section class=""col-lg-5 col-12 col-sm-12 connectedSortable"">

                <!-- Map card -->
                <!-- /.card -->
                <!-- solid sales graph -->
                <div class=""card bg-gradient-info"">
                    <div class=""card-header border-0"">
                        <h3 class=""card-title"">
                            <i class=""fas fa-th mr-1""></i>
                            Weekly Users Visit Chart
                        </h3>

               ");
            WriteLiteral(@"         <div class=""card-tools"">
                            <button type=""button"" class=""btn bg-info btn-sm"" data-card-widget=""collapse"">
                                <i class=""fas fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn bg-info btn-sm"" data-card-widget=""remove"">
                                <i class=""fas fa-times""></i>
                            </button>
                        </div>
                    </div>
                    <div class=""card-body"">
                        <canvas class=""chart"" id=""line-chart"" style=""min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;""></canvas>
                    </div>
                    <!-- /.card-body -->
                    <div class=""card-footer bg-transparent"">
                        <div class=""row"">

                            <!-- ./col -->
                        </div>
                        <!-- /.row -->
                    </div>");
            WriteLiteral(@"
                    <!-- /.card-footer -->
                </div>
                <!-- /.card -->
                <!-- Calendar -->
                <!-- /.card -->
            </section>

            <section class=""col-lg-12 col-12 col-sm-12 connectedSortable"">
                <!-- HTML -->
                <div class=""card bg-gradient-info"">
                    <div class=""card-header border-0"">
                        <h3 class=""card-title"">
                            <i class=""fas fa-th mr-1""></i>
                            Income Chart
                        </h3>

                        <div class=""card-tools"">
                            <button type=""button"" class=""btn bg-info btn-sm"" data-card-widget=""collapse"">
                                <i class=""fas fa-minus""></i>
                            </button>
                            <button type=""button"" class=""btn bg-info btn-sm"" data-card-widget=""remove"">
                                <i class=""fas fa-times""></i>
  ");
            WriteLiteral(@"                          </button>
                        </div>
                    </div>
                    <div class=""card-body"" style=""background-color:white"">
                        <div id=""chartdiv""></div>
                    </div>
                    <!-- /.card-body -->
                    <div class=""card-footer bg-transparent"">
                        <div class=""row"">

                            <!-- ./col -->
                        </div>
                        <!-- /.row -->
                    </div>
                    <!-- /.card-footer -->
                </div>
                
            </section>

                <!-- right col -->
        </div>
        <!-- /.row (main row) -->
    </div><!-- /.container-fluid -->
</section>
<script>
    am4core.ready(function () {

        // Themes begin
        am4core.useTheme(am4themes_animated);
        // Themes end

        // Create chart
        var chart = am4core.create(""chartdiv"", am4charts.XYChar");
            WriteLiteral("t);\r\n\r\n        var data = [];\r\n        var price1 = 1000, price2 = 1200;\r\n        var quantity = 30000;\r\n          var allData = JSON.parse(\'");
            EndContext();
            BeginContext(9102, 55, false);
#line 214 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                               Write(Html.Raw(JsonConvert.SerializeObject(Model.IncomeList)));

#line default
#line hidden
            EndContext();
            BeginContext(9157, 1292, true);
            WriteLiteral(@"');
        for (var i = 0; i < allData.length; i++) {
            var dataobj = {}
            dataobj[allData[i].PaymentMode] = allData[i].Amount;
            dataobj[allData[i].PaymentMode+""Date""] = allData[i].PaymentDate;
            
            data.push(dataobj);
        }
       

        chart.data = data;

        var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
        dateAxis.renderer.grid.template.location = 0;
        dateAxis.renderer.labels.template.fill = am4core.color(""#e59165"");

        var dateAxis2 = chart.xAxes.push(new am4charts.DateAxis());
        dateAxis2.renderer.grid.template.location = 0;
        dateAxis2.renderer.labels.template.fill = am4core.color(""#dfcc64"");

        var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
        valueAxis.tooltip.disabled = true;
        valueAxis.renderer.labels.template.fill = am4core.color(""#e59165"");

        valueAxis.renderer.minWidth = 60;

        var valueAxis2 = chart.yAxes.push(new am4ch");
            WriteLiteral(@"arts.ValueAxis());
        valueAxis2.tooltip.disabled = true;
        valueAxis2.renderer.labels.template.fill = am4core.color(""#dfcc64"");
        valueAxis2.renderer.minWidth = 60;
        valueAxis2.syncWithAxis = valueAxis;
        var allTypes = JSON.parse('");
            EndContext();
            BeginContext(10450, 91, false);
#line 245 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                              Write(Html.Raw(JsonConvert.SerializeObject(Model.IncomeList.Select(x=>x.PaymentMode).Distinct())));

#line default
#line hidden
            EndContext();
            BeginContext(10541, 1939, true);
            WriteLiteral(@"');
        var randomcolors = ['#17a2b8', '#dc3545', '#0AFFFF', '#87F717'];
      
      
        for (var i = 0; i < allTypes.length; i++) {
            var series = chart.series.push(new am4charts.LineSeries());
          
            var total = 0;
            $.each(allData.filter(x => x.PaymentMode == allTypes[i]).map(x => x.Amount), function () {
                total += this;
            });
            series.name = allTypes[i] + ""("" + total.toLocaleString()+"")"";
            series.dataFields.dateX = allTypes[i]+""Date"";
    series.dataFields.valueY = allTypes[i];
            series.tooltipText = ""{valueY.value}"";
            series.fill = am4core.color(randomcolors[i]);
            series.stroke = am4core.color(randomcolors[i]);
            series.strokeWidth = 2;
            var bullet = series.bullets.push(new am4charts.CircleBullet());
            //bullet.circle.stroke = randomcolors[i];
            bullet.circle.strokeWidth = 2;
            bullet.fillOpacity = 1;
         ");
            WriteLiteral(@"   bullet.strokeWidth = 2;
            bullet.circle.radius = 4;
            bullet.fill =""#ffffff""
           // bullet2.fill = bullet.fill;
        }
      
        //series.strokeWidth = 3;

        //series2.strokeWidth = 3;

        chart.cursor = new am4charts.XYCursor();
        chart.cursor.xAxis = dateAxis2;

        var scrollbarX = new am4charts.XYChartScrollbar();
        scrollbarX.series.push(series);
        chart.scrollbarX = scrollbarX;

        chart.legend = new am4charts.Legend();
        chart.legend.parent = chart.plotContainer;
        chart.legend.zIndex = 100;

        valueAxis2.renderer.grid.template.strokeOpacity = 0.07;
        dateAxis2.renderer.grid.template.strokeOpacity = 0.07;
        dateAxis.renderer.grid.template.strokeOpacity = 0.07;
        valueAxis.renderer.grid.template.strokeOpacity = 0.07;

    }); // end am4core.ready()
</script>
");
            EndContext();
            BeginContext(18149, 354, true);
            WriteLiteral(@"<script>
    function LoadPartialView(url, elem, postData) {

        $.post(url, postData, function (result, status) {
            $(""#"" + elem).html('');
            $(""#"" + elem).html(result);
            HideLoader();

        });

    }
    // Sales graph chart


    var Refresh = function()
        {
             LoadPartialView('");
            EndContext();
            BeginContext(18504, 39, false);
#line 465 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                         Write(Url.Action("BindToDo","DashBoardGraph"));

#line default
#line hidden
            EndContext();
            BeginContext(18543, 259, true);
            WriteLiteral(@"', ""Todolist"", {});
        }
    window.onload = function () {
        var salesGraphChartCanvas = $('#line-chart').get(0).getContext('2d')
        // $('#revenue-chart').get(0).getContext('2d');
        var labeldata = [];
        var userdata = [];
");
            EndContext();
#line 472 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
      foreach( var item in Model.EmployeeDashboardList)
                {

#line default
#line hidden
            BeginContext(18878, 20, true);
            WriteLiteral("                    ");
            EndContext();
            BeginContext(18900, 16, true);
            WriteLiteral("labeldata.push(\'");
            EndContext();
            BeginContext(18917, 37, false);
#line 474 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                                 Write(item.ViewDate.ToString("dd-MMM-yyyy"));

#line default
#line hidden
            EndContext();
            BeginContext(18954, 28, true);
            WriteLiteral("\');\r\n                       ");
            EndContext();
            BeginContext(18984, 15, true);
            WriteLiteral("userdata.push(\'");
            EndContext();
            BeginContext(19000, 14, false);
#line 475 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                                   Write(item.TotalView);

#line default
#line hidden
            EndContext();
            BeginContext(19014, 5, true);
            WriteLiteral("\');\r\n");
            EndContext();
#line 476 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                }

#line default
#line hidden
            BeginContext(19038, 2141, true);
            WriteLiteral(@"        var salesGraphChartData = {
            labels: labeldata,
            datasets: [
                {
                    label: 'Weekly Traffic Rate',
                    fill: false,
                    borderWidth: 2,
                    lineTension: 0,
                    spanGaps: true,
                    borderColor: '#efefef',
                    pointRadius: 3,
                    pointHoverRadius: 7,
                    pointColor: '#efefef',
                    pointBackgroundColor: '#efefef',
                    data: userdata
                }
            ]
        }

        var salesGraphChartOptions = {
            maintainAspectRatio: false,
            responsive: true,
            legend: {
                display: false
            },
            scales: {
                xAxes: [{
                    ticks: {
                        fontColor: '#efefef'
                    },
                    gridLines: {
                        display: false,
  ");
            WriteLiteral(@"                      color: '#efefef',
                        drawBorder: false
                    }
                }],
                yAxes: [{
                    ticks: {

                        fontColor: '#efefef'
                    },
                    gridLines: {
                        display: true,
                        color: '#efefef',
                        drawBorder: false
                    }
                }]
            }
        }

        // This will get the first returned node in the jQuery collection.
        // eslint-disable-next-line no-unused-vars
        var salesGraphChart = new Chart(salesGraphChartCanvas, {
            type: 'line',
            data: salesGraphChartData,
            options: salesGraphChartOptions
        })
    }

    //Additembutton, DivShow, Additemtextbox
    function GetAjaxDataPromise(url, postData) {

        var promise = $.post(url, postData, function (promise, status) {
        });
        return promise;");
            WriteLiteral("\n    };\r\n    var Additembutton = function () {\r\n\r\n        var promises = GetAjaxDataPromise(\'");
            EndContext();
            BeginContext(21180, 40, false);
#line 545 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                                      Write(Url.Action("Additems", "DashboardGraph"));

#line default
#line hidden
            EndContext();
            BeginContext(21220, 716, true);
            WriteLiteral(@"', { TaskName: $(""#Additemtextbox"").val() });
        promises.done(function (response) {

            $(""#Additemtextbox"").val("""");
            if (response.data == 0) {
            }
            else {
                Refresh();
                Swal.fire({
                    position: 'top-end',
                    type: 'success',
                    title: ""Item Inserted Successfully"",
                    showConfirmButton: false,
                    timer: 3000
                });

            }
        }).fail(function (response) {

            console.log(response);
        });
    }

    var SaveUpdateItem = function (elem,ids) {

        var promises = GetAjaxDataPromise('");
            EndContext();
            BeginContext(21937, 46, false);
#line 570 "E:\Code2night v2\code2night\Views\DashboardGraph\index.cshtml"
                                      Write(Url.Action("SaveUpdateItem", "DashboardGraph"));

#line default
#line hidden
            EndContext();
            BeginContext(21983, 639, true);
            WriteLiteral(@"', { IsCompleted: $(""#"" + elem).is("":checked""), Id: ids});
        promises.done(function (response) {
            Refresh();
            debugger;
            if (response.data == 0) {
            }
            //else {
            //    Swal.fire({
            //        position: 'top-end',
            //        type: 'success',
            //        title: ""Item Inserted Successfully"",
            //        showConfirmButton: false,
            //        timer: 3000
            //    });

            //}
        }).fail(function (response) {

            console.log(response);
        });


    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IHttpContextAccessor HttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Code2Night.DAL.Common.HomeViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
